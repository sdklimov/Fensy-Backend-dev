application:
  datasource:
    url: r2dbc:pool:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:local_db}${DB_CONN_PROP:?initialSize=10&maxSize=10&acquireRetry=10&maxCreateConnectionTime=PT2S&maxAcquireTime=PT2.5S&maxIdleTime=PT180S&poolName=db-pool-portal}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    migration:
      url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:local_db}
  post-properties:
    allowed-mime-types:
      image: ${ALLOWED_IMAGE_MIME_TYPES:image/jpeg,image/png,image/gif,image/webp}
      video: ${ALLOWED_VIDEO_MIME_TYPES:video/mp4,video/webm,video/ogg}
      audio: ${ALLOWED_AUDIO_MIME_TYPES:audio/mpeg,audio/ogg,audio/wav}
    file-type-amount-limits:
      image: ${ALLOWED_IMAGE_COUNT:10}
      video: ${ALLOWED_VIDEO_COUNT:5}
      audio: ${ALLOWED_AUDIO_COUNT:5}
      link: ${ALLOWED_LINK_COUNT:5}
      article: ${ALLOWED_ARTICLE_COUNT:5}
      podcast: ${ALLOWED_PODCAST_COUNT:5}
      product: ${ALLOWED_PRODUCT_COUNT:5}
      collection: ${ALLOWED_PRODUCT_COUNT:5}
    pagination:
      page-size: ${POST_DEFAULT_PAGE_SIZE:10}
  file-storage:
    s3:
      bucket-name: ${S3_BUCKET_NAME:fansy-storage}
  content-moderation:
    openai:
      key: ${OPENAI_KEY_SECRET:}
  avatar:
    default-avatar-media-asset-ids: ${DEFAULT_AVATAR_MEDIA_ASSET_IDS}
  frontend:
    domain: ${FRONTEND_DOMAIN:localhost}
  ton:
    wallet:
      mnemonics: ${TON_WALLET_MNEMONICS:}
  #    provider:
  #      url: ${TON_PROVIDER_URL:https://toncenter.com/api/v2/jsonRPC}
  #      api-key: ${TON_API_KEY:}
  media:
    compression:
      image-post-attachment:
        large:
          width: ${IMAGE_POST_ATTACHMENT_LARGE_WIDTH:1920}
          quality: ${IMAGE_POST_ATTACHMENT_LARGE_QUALITY:0.9}
        medium:
          width: ${IMAGE_POST_ATTACHMENT_MEDIUM_WIDTH:800}
          quality: ${IMAGE_POST_ATTACHMENT_MEDIUM_QUALITY:0.8}
        thumbnail:
          width: ${IMAGE_POST_ATTACHMENT_SMALL_WIDTH:400}
          quality: ${IMAGE_POST_ATTACHMENT_SMALL_QUALITY:0.7}
      video-post-attachment:
        playback_720p:
          height: ${VIDEO_POST_ATTACHMENT_LARGE_WIDTH:720}
          crf: ${VIDEO_POST_ATTACHMENT_LARGE_QUALITY:22}
        loop:
          width: ${VIDEO_POST_ATTACHMENT_MEDIUM_WIDTH:800}
          crf: ${VIDEO_POST_ATTACHMENT_MEDIUM_QUALITY:32}
        thumbnail:
          width: ${VIDEO_POST_ATTACHMENT_SMALL_WIDTH:800}
          quality: ${VIDEO_POST_ATTACHMENT_SMALL_QUALITY:0.8}
      avatar:
        large:
          width: ${AVATAR_LARGE_WIDTH:500}
          quality: ${AVATAR_LARGE_QUALITY:0.9}
        medium:
          width: ${AVATAR_MEDIUM_WIDTH:150}
          quality: ${AVATAR_MEDIUM_QUALITY:0.8}
        thumbnail:
          width: ${AVATAR_SMALL_WIDTH:50}
          quality: ${AVATAR_SMALL_QUALITY:0.7}

spring:
  cloud:
    aws:
      credentials:
        access-key: ${S3_KEY_ID}
        secret-key: ${S3_KEY_SECRET}
      region:
        static: ${S3_REGION}
      s3:
        endpoint: ${S3_ENDPOINT}
        enabled: true
  graphql:
    graphiql:
      enabled: true
    schema:
      locations: classpath:graphql/
    path: /gql
  application:
    name: fensy
  main:
    banner-mode: off
  r2dbc:
    url: ${application.datasource.url}
    username: ${application.datasource.username}
    password: ${application.datasource.password}
  liquibase:
    enabled: true
    url: ${application.datasource.migration.url}
    user: ${application.datasource.username}
    password: ${application.datasource.password}
  security:
    jwt:
      private-key: file:${JWT_PRIVATE_KEY_PATH}
      public-key: file:${JWT_PUBLIC_KEY_PATH}
      ttl: ${JWT_TTL:15m}
      refresh-token-ttl: ${JWT_REFRESH_TTL:7d}
    oauth2:
      user-info-uri:
        yandex: ${YANDEX_USER_INFO_URI:https://login.yandex.ru/info}

server:
  port: ${SERVER_PORT:8080}

logging:
  level:
    ru.fensy.dev: debug
    org.springframework.r2dbc: ${R2DBC_LOGGING_LEVEL:DEBUG}
    io.r2dbc.postgresql.QUERY: ${POSTGRESQL_QUERY_LOGGING_LEVEL:DEBUG}
    io.r2dbc.postgresql.PARAM: ${POSTGRESQL_PARAM_LOGGING_LEVEL:DEBUG}

springdoc:
  swagger-ui:
    path: /doc-api
    disable-swagger-default-url: true
    default-model-expand-depth: 0
    default-models-expand-depth: 0
  pre-loading-enabled: true
  api-docs:
    path: /v3/api-docs
