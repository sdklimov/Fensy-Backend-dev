application:
  datasource:
    url: r2dbc:pool:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:local_db}${DB_CONN_PROP:?initialSize=10&maxSize=10&acquireRetry=10&maxCreateConnectionTime=PT2S&maxAcquireTime=PT2.5S&maxIdleTime=PT180S&poolName=db-pool-portal}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    migration:
      url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:local_db}
  post-properties:
    allowed-mime-types:
      image: ${ALLOWED_IMAGE_MIME_TYPES:image/jpeg,image/png,image/gif,image/webp}
      video: ${ALLOWED_VIDEO_MIME_TYPES:video/mp4,video/webm,video/ogg}
      audio: ${ALLOWED_AUDIO_MIME_TYPES:audio/mpeg,audio/ogg,audio/wav}
    file-type-amount-limits:
      image: ${ALLOWED_IMAGE_COUNT:10}
      video: ${ALLOWED_VIDEO_COUNT:5}
      audio: ${ALLOWED_AUDIO_COUNT:5}
      link: ${ALLOWED_LINK_COUNT:5}
      article: ${ALLOWED_ARTICLE_COUNT:5}
      podcast: ${ALLOWED_PODCAST_COUNT:5}
      product: ${ALLOWED_PRODUCT_COUNT:5}
      collection: ${ALLOWED_PRODUCT_COUNT:5}
    pagination:
      page-size: ${POST_DEFAULT_PAGE_SIZE:10}

spring:
  graphql:
    graphiql:
      enabled: true
    schema:
      locations: classpath:graphql/
    path: /gql
  application:
    name: fensy
  main:
    banner-mode: off
  r2dbc:
    url: ${application.datasource.url}
    username: ${application.datasource.username}
    password: ${application.datasource.password}
  liquibase:
    enabled: true
    url: ${application.datasource.migration.url}
    user: ${application.datasource.username}
    password: ${application.datasource.password}
  security:
    oauth2:
      user-info-uri:
        yandex: ${YANDEX_USER_INFO_URI:https://login.yandex.ru/info}
      client:
        registration:
          yandex:
            client-id: ${YANDEX_CLIENT_ID:}
            client-secret: ${YANDEX_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: ${YANDEX_CLIENT_REDIRECT_URL:https://fsy.app/login}
#            scope: login:email login:info
            client-name: Yandex
        provider:
          yandex:
            authorization-uri: https://oauth.yandex.ru/authorize
            token-uri: https://oauth.yandex.ru/token

server:
  port: ${SERVER_PORT:8080}

logging:
  level:
    org.springframework.r2dbc: ${R2DBC_LOGGING_LEVEL:DEBUG}
    io.r2dbc.postgresql.QUERY: ${POSTGRESQL_QUERY_LOGGING_LEVEL:DEBUG}
    io.r2dbc.postgresql.PARAM: ${POSTGRESQL_PARAM_LOGGING_LEVEL:DEBUG}